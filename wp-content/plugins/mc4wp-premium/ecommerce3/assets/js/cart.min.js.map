{"version":3,"sources":["ecommerce3/assets/js/cart.js"],"names":["r","e","n","t","o","i","f","c","u","a","Error","code","p","exports","call","length","1","require","module","previousDataString","checkoutForm","document","querySelector","previousEmailAddress","formSubmitted","ajaxurl","mc4wp_ecommerce_cart","ajax_url","woocommerce_params","getFieldValue","fieldName","field","concat","value","trim","sendFormData","async","data","previous_billing_email","billing_email","billing_first_name","billing_last_name","billing_address_1","billing_address_2","billing_city","billing_state","billing_postcode","billing_country","dataString","JSON","stringify","emailAddress","test","isEmailAddressValid","request","XMLHttpRequest","open","setRequestHeader","send","addEventListener","window"],"mappings":"CAA4E,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,GAAE,EAAoC,IAAID,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGG,EAAE,OAAOA,EAAEH,GAAE,GAAI,IAAII,EAAE,IAAIC,MAAM,uBAAuBL,EAAE,KAAK,MAAMI,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEV,EAAEG,GAAG,CAACQ,QAAQ,IAAIZ,EAAEI,GAAG,GAAGS,KAAKF,EAAEC,QAAQ,SAASb,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIY,EAAEA,EAAEC,QAAQb,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGQ,QAAQ,IAAI,IAAIL,GAAE,EAAoCH,EAAE,EAAEA,EAAEF,EAAEY,OAAOV,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACY,EAAE,CAAC,SAASC,EAAQC,EAAOL,GACxiB,aAEA,IAEIM,EAFAC,EAAeC,SAASC,cAAc,oDACtCC,EAAuB,GAEvBC,GAAgB,EAChBC,EAA0C,oBAAzBC,qBAAuCA,qBAAqBC,SAAWC,mBAAmBD,SAO/G,SAASE,EAAcC,GACrB,IAAIC,EAAQX,EAAaE,cAAc,UAAWU,OAAOF,EAAW,OAEpE,OAAKC,EAIEA,EAAME,MAAMC,OAHV,GAMX,SAASC,EAAaC,GACpB,IAAIC,EAAO,CACTC,uBAAwBf,EACxBgB,cAAeV,EAAc,iBAC7BW,mBAAoBX,EAAc,sBAClCY,kBAAmBZ,EAAc,qBACjCa,kBAAmBb,EAAc,qBACjCc,kBAAmBd,EAAc,qBACjCe,aAAcf,EAAc,gBAC5BgB,cAAehB,EAAc,iBAC7BiB,iBAAkBjB,EAAc,oBAChCkB,gBAAiBlB,EAAc,oBAE7BmB,EAAaC,KAAKC,UAAUb,GAEhC,GA9BF,SAA6Bc,GAE3B,MAA+B,iBAAjBA,GAA8C,KAAjBA,GAD/B,eAC4DC,KAAKD,GA4BzEE,CAAoBhB,EAAKE,gBAAkBS,IAAe7B,EAAoB,CAChF,IAAImC,EAAU,IAAIC,eAClBD,EAAQE,KAAK,OAAQ/B,EAAU,wCAAyCW,GACxEkB,EAAQG,iBAAiB,eAAgB,oBACzCH,EAAQI,KAAKV,GACb7B,EAAqB6B,EACrBzB,EAAuBc,EAAKE,eAI5BnB,IACFA,EAAauC,iBAAiB,SAAU,WACtCxB,GAAa,KAEff,EAAauC,iBAAiB,SAAU,WACtCnC,GAAgB,IAGlBoC,OAAOD,iBAAiB,eAAgB,WACjCnC,GACHW,GAAa,OAKjB,KAAK,GAAG,CAAC","file":"cart.min.js","sourcesContent":["(function () { var require = undefined; var define = undefined; (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar checkoutForm = document.querySelector('form.woocommerce-checkout, form[name=\"checkout\"]');\nvar previousEmailAddress = '';\nvar previousDataString;\nvar formSubmitted = false;\nvar ajaxurl = typeof mc4wp_ecommerce_cart !== \"undefined\" ? mc4wp_ecommerce_cart.ajax_url : woocommerce_params.ajax_url;\n\nfunction isEmailAddressValid(emailAddress) {\n  var regex = /\\S+@\\S+\\.\\S+/;\n  return typeof emailAddress === \"string\" && emailAddress !== '' && regex.test(emailAddress);\n}\n\nfunction getFieldValue(fieldName) {\n  var field = checkoutForm.querySelector(\"[name=\\\"\".concat(fieldName, \"\\\"]\"));\n\n  if (!field) {\n    return '';\n  }\n\n  return field.value.trim();\n}\n\nfunction sendFormData(async) {\n  var data = {\n    previous_billing_email: previousEmailAddress,\n    billing_email: getFieldValue('billing_email'),\n    billing_first_name: getFieldValue('billing_first_name'),\n    billing_last_name: getFieldValue('billing_last_name'),\n    billing_address_1: getFieldValue('billing_address_1'),\n    billing_address_2: getFieldValue('billing_address_2'),\n    billing_city: getFieldValue('billing_city'),\n    billing_state: getFieldValue('billing_state'),\n    billing_postcode: getFieldValue('billing_postcode'),\n    billing_country: getFieldValue('billing_country')\n  };\n  var dataString = JSON.stringify(data); // schedule cart update if email looks valid && data changed.\n\n  if (isEmailAddressValid(data.billing_email) && dataString !== previousDataString) {\n    var request = new XMLHttpRequest();\n    request.open('POST', ajaxurl + \"?action=mc4wp_ecommerce_schedule_cart\", async);\n    request.setRequestHeader('Content-Type', 'application/json');\n    request.send(dataString);\n    previousDataString = dataString;\n    previousEmailAddress = data.billing_email;\n  }\n}\n\nif (checkoutForm) {\n  checkoutForm.addEventListener('change', function () {\n    sendFormData(true);\n  });\n  checkoutForm.addEventListener('submit', function () {\n    formSubmitted = true;\n  }); // always send before unloading window, but not if form was submitted\n\n  window.addEventListener('beforeunload', function () {\n    if (!formSubmitted) {\n      sendFormData(false);\n    }\n  });\n}\n\n},{}]},{},[1]);\n })();"]}